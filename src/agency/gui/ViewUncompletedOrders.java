/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package agency.gui;

import agency.persistance.controller.remote.OrdersController;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import agency.persistance.factory.ControllerFactory;
import com.zegates.sanctus.services.remote.Orders;

/**
 *
 * @author Thilina
 */
public class ViewUncompletedOrders extends javax.swing.JInternalFrame {

    private DefaultTableModel dtm;
    private OrdersController ojc;

    /**
     * Creates new form ViewUncompletedOrders
     */
    public ViewUncompletedOrders() {
        initComponents();
        ojc = ControllerFactory.getOrdersController();
        dtm = (DefaultTableModel) tblvieworder.getModel();
        setTable();
//        System.gc();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblvieworder = new javax.swing.JTable();
        togbtnAll = new javax.swing.JToggleButton();
        togbtnNotPaid = new javax.swing.JToggleButton();
        togbtnPaid = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Incompleted Orders");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
        });

        tblvieworder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Date", "Customer", "T:P", "Total", "Paid Amount", "Due Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblvieworder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblvieworderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblvieworder);

        buttonGroup1.add(togbtnAll);
        togbtnAll.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        togbtnAll.setSelected(true);
        togbtnAll.setText("Show All");
        togbtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togbtnAllActionPerformed(evt);
            }
        });

        buttonGroup1.add(togbtnNotPaid);
        togbtnNotPaid.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        togbtnNotPaid.setText("Show Incompleted");
        togbtnNotPaid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        togbtnNotPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togbtnNotPaidActionPerformed(evt);
            }
        });

        buttonGroup1.add(togbtnPaid);
        togbtnPaid.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        togbtnPaid.setText("Show Completed");
        togbtnPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togbtnPaidActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 2, 12)); // NOI18N
        jLabel1.setText("DOUBLE CLICK TO UPDATE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(togbtnAll, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(togbtnNotPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(togbtnPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {togbtnAll, togbtnNotPaid, togbtnPaid});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(togbtnAll)
                    .addComponent(togbtnNotPaid)
                    .addComponent(togbtnPaid)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {togbtnAll, togbtnNotPaid, togbtnPaid});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void togbtnNotPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togbtnNotPaidActionPerformed
        setTable();
    }//GEN-LAST:event_togbtnNotPaidActionPerformed

    private void togbtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togbtnAllActionPerformed
        setTable();
    }//GEN-LAST:event_togbtnAllActionPerformed

    private void togbtnPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togbtnPaidActionPerformed
        setTable();
    }//GEN-LAST:event_togbtnPaidActionPerformed

    private void tblvieworderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblvieworderMouseClicked
        if(evt.getClickCount() == 2){
            int index = tblvieworder.getSelectedRow();
            if(index!=-1){
                long oid = (long) dtm.getValueAt(index, 0);
                new ViewOrder(null, true, oid).setVisible(true);
                setTable();
            }
        }
//        System.gc();
    }//GEN-LAST:event_tblvieworderMouseClicked

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        setTable();
    }//GEN-LAST:event_formInternalFrameActivated

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblvieworder;
    private javax.swing.JToggleButton togbtnAll;
    private javax.swing.JToggleButton togbtnNotPaid;
    private javax.swing.JToggleButton togbtnPaid;
    // End of variables declaration//GEN-END:variables

    private void setTable() {

        int x = 0;
        if (togbtnAll.isSelected()) {
            x = 1;
        } else if (togbtnNotPaid.isSelected()) {
            x = 2;
        } else if (togbtnPaid.isSelected()) {
            x = 3;
        }
        dtm.setRowCount(0);
        List<Orders> orders = null;
        switch (x) {
            case 1:
                orders = ojc.findOrdersEntities();
               // System.out.println("xdf" + orders.size());
                break;
            case 2:
                orders = ojc.findOrdersEntitiesPaidfalse(false);
            //    System.out.println("waw" + orders.size());
                break;
            case 3:
                orders = ojc.findOrdersEntitiesPaidfalse(true);
             //   System.out.println("wa" + orders.size());
                break;
        }
        for (Orders order : orders) {
            dtm.addRow(new Object[]{order.getOid(), order.getDateAdded(), order.getCustName(),
                        order.getTpNo(), order.getTotal(), order.getPaidAmount(),
                        order.getTotal() - order.getPaidAmount()-order.getDiscount()});
        }
//        System.gc();
    }
}
